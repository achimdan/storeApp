(function(){
    'use strict';

    /**
     * This is a sample factory
     * Generated by ng-appgen Yeomen/Angular generator.
     *
     * @author: Achim Dan
     */
    angular.module('administration')
    .factory('fileManagerService', function($injector, $http, $q, $mdDialog) {

        var factory = {},
            fileManager = $injector.get('fileManager'),

            files = {
                loaded: false,
                fetching: false,
                data: {}
            },
            theFile = {
                loaded: false,
                fetching: false,
                checked: false,
                data: {}
            },
            images = {
                loaded: false,
                fetching: false,
                checked: false,
                data: {}
            },
            selectedImage = [],
            formData = {
                data: {}
            };

        var successFetchCallback = function (success) {
            console.log('==============',success.data);
            files.fetching = false;
            files.loaded = true;
            files.data = success.data;
        };
        var errorCallback = function (error) {
            console.log(error);
        };

        var successNavigate = function (success) {
          	files.fetching = false;
            files.loaded = true;
            files.data = success.data;
        };

        var errorNavigate = function (error) {
			console.log('errorNavigate',error);
        };

        var successDelete = function (success) {
            console.log(success);
          	// refresh();
        };
        
        var errorDelete = function (error) {
            console.log(error);
        };

        var successUpload = function (success) {
            console.log(success);
          	// refresh();
        };
        
        var errorUpload = function (error) {
            console.log(error);
        };

        var successImageCallback = function (success) {
            selectedImage = success.data;
        };

        var successCallback = function (response) {
            console.log(response)
        };

        factory.addFolder = function (newFolder) {
            var data = {
                fileName: newFolder,
                path: files.data.path
            };
            fileManager.addFolder(data).then(successCallback,errorCallback);
        };

        factory.navigate = function () {
            // var data = _.pick(files.data,['path'],theFile.data['name']);
            files.fetching = true;
            var data = {
                path: files.data.path,
                fileName: theFile.data.name
            };
            fileManager.navigateFolders(data).then(successNavigate,errorNavigate);
        };

        factory.fetchFiles = function () {
            files.fetching = true;
            fileManager.fetchFiles().then(successFetchCallback, errorCallback);
        };

        factory.getFiles = function () {
            return files.data.files;
        };

        factory.loadFolder = function (file) {
            if (file.folder === true) {
                theFile.data = file;
                theFile.fetching = false;
                theFile.loaded = true;
                
                factory.navigate();
            }
        };

        factory.parentDirectory = function () {
            if (files.data.root === false) {
                var data = {
                    'path' : files.data.path
                };
                fileManager.parent(data).then(successNavigate,errorNavigate);
            }
        };

        factory.delete = function () {
            var theFiles = [];
            _.forEach(files.data.files, function(each) {
                _.forEach(each.checked, function(eachCheck,index) {
                    if (eachCheck === true) {
                        theFiles.push({
                            fileName: files.data.files[index].name
                        });
                    }
                });
                var data = {
                    path: files.data.path 
                };
                data.theFiles = theFiles;
                fileManager.delete(data).then(successDelete,errorDelete);
            });
        };


        factory.upload = function () {
            fileManager.upload(successUpload,errorUpload);
        };

        factory.addToProduct = function () {
            var theFiles = [];
            _.forEach(files.data.files, function(each) {
                _.forEach(each.checked, function(eachCheck,index) {
                    if (eachCheck === true) {
                        theFiles.push(each);
                    }
                });
                // fileManager.delete(data).then(successDelete,errorDelete);
            });
            
            images.data = theFiles;
            $mdDialog.hide(images.data);
        };

        factory.productImages = function () {
            return images.data;
        };

        //UNIVERSAL ADD IMAGE
        factory.addNewImage = function () {
            // images.data = [];
            selectedImage.push({
                'img':'',
                'sort': ''
            });
            // if (images.data !== undefined) {
            //     images.data.push({
            //         'img':''
            //     });
            // } else {
            //     images.data.push({
            //         'img':''
            //     });
            // }
        };

        // factory.selectedImage = function () {
        //     return selectedImage;
        // };

        factory.showDialog = function (index) {
            var poz = {};
                poz = index;
                $mdDialog.show({
                parent: angular.element(document.body),
                targetEvent: index,
                focusOnOpen: true,
                templateUrl: 'administration/dashboard/templates/file-manager/file-manager.html',
                controller: 'FileManagerController'
            }).then(
            function success (images) {
                selectedImage.splice(selectedImage.length - 1,1);
                _.forEach(images,function(eachImage){
                    selectedImage.push(eachImage);
                });
            },errorCallback);
        };

        factory.addImage = function (images) {
            fileManager.addImage(images).then(successCallback,errorCallback);
        };

        factory.fetchImages = function () {
            fileManager.fetchImages().then(successImageCallback,errorCallback);
        };

        factory.getImage = function () {
            return selectedImage;
        };
        // $scope.delete = function(formData) {
        //     console.log($scope.formData.checked[0]);
        //     var files = [];
        //     _.forEach($scope.formData.checked, function(each,index){
        //         if (each === true ) {
        //             files.push({
        //                 fileName: $scope.files[index].name
        //             });
        //         }
        //     });

        //     var data = {
        //       path: $scope.thePath.path
        //     };
        //     data.files = files;
        //     $http.post(urlDelete,data).then(successDelete,errorDelete);
            
        // };

        factory.init = function () {
            files = {
                loaded: false,
                fetching: false,
                data: {}
            };
            theFile = {
                loaded: false,
                fetching: false,
                checked: false,
                data: {}
            };
            images = {
                loaded: false,
                fetching: false,
                checked: false,
                data: {}
            };
            selectedImage = [];
            formData = {
                data: {}
            };

        };

        return factory;

    });

})();
