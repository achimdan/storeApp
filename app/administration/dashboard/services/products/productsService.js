(function(){
    'use strict';

    /**
     * This is a sample service
     * Generated by ng-appgen Yeomen/Angular generator.
     *
     * @author: Achim Dan
     */
    angular.module('administration').factory('productsService', function($http, $q, $state, $injector, $mdDialog) {

        var factory = {},
            Products = $injector.get('Products'),
            HttpErrors = $injector.get('HttpErrors'),
            Notification = $injector.get('Notification'),
            products = {
                loaded: false,
                fetching: true,
                data: {}
            },
            categories = {
                loaded: false,
                fetching: true,
                data: {}
            },
            product = {
                loaded: false,
                fetching: true,
                data: {}
            },
            image = {
                loaded: false,
                fetching: true,
                data: {}
            },
            query = {
                order: 'name',
                limit: 10,
                page: 1
            },
            stocks = [
                {"value" : 'IN_STOCK', "stockStatus" : "In stock"},
                {"value" : 'OUT_OF_STOCK', "stockStatus" : "Out of stock"}
            ];

        var successCallback = function (success) {
            products.data = success.data;
            product.data = success.data;
        };
        var successCategoriesCallback = function (success) {
            categories.data = success.data.content;
            // console.log('categories.data',success.data);
        };

        var successMethod = function (successPost) {
            Notification.success({message: 'Success message goes here', delay: 2000});
        };

        var errorCallback = function (error) {
            HttpErrors.handleError(error);
        };

        factory.stocks = function () {
            return stocks;
        };
        
        factory.getProducts = function () {
            return products.data.content;
        };

        factory.getProduct = function () {
            return product.data;
        };

        factory.editProduct = function (product) {
            $state.go('dashboard.product',{id: product.id});
        };

        factory.getTotalElements = function () {
            return products.data.totalElements;
        };

        factory.getTotalPages = function () {
            return products.data.totalPages;
        };

        factory.pagination = function (query) {
            if (query !== undefined) {
                products.fetching = true;
                Products.fetchProducts(query).then(successCallback,errorCallback);
            }
        };

        factory.fetchProducts = function () {
            products.fetching = true;
            Products.fetchProducts(query).then(successCallback,errorCallback);
        };

        factory.fetchProduct = function (id) {
            product.fetching = true;
            Products.fetchProduct(id).then(successCallback,errorCallback);
        };

        factory.imageProduct = function (image) {
            // image.data.push(images);
            image.data = image;
        };

        factory.imageFromManager = function () {
            return image.data;
        };

        factory.addProduct = function (formData) {
            Products.addProduct(formData).then(successMethod,errorCallback);
        };

        factory.addNewImage = function () {
            if (product.data.images !== undefined) {
                product.data.images.push({
                    'img':''
                });
            } else {
                product.data.images = [];
                product.data.images.push({
                    'img':''
                });
            }
        };

        factory.removeImage = function (index) {
            product.data.images.splice(index,1);
        };

        factory.fetchCategories = function () {
            categories.fetching = true;
            Products.fetchCategories().then(successCategoriesCallback,errorCallback);
        };

        factory.getCategories = function () {
            return categories.data;
        };

        factory.categoriesArray = function (item) {
            if (product.data.categories !== undefined) {
                product.data.categories.push(item);
            } else {
                product.data.categories = [];
                product.data.categories.push(item);
            }
            // product.data.categories.push(item);

                    // categories.data.splice(item);

            // _.forEach(product.data.categories,function(eachCategory){
            //     if (eachCategory.id !== item.id) {
            //     }
            // });
        };

        factory.removeCategoryProduct = function (index) {
            product.data.categories.splice(index,1);
        };

        factory.showDialog = function (index) {
            var poz = {};
                poz = index;
                $mdDialog.show({
                parent: angular.element(document.body),
                targetEvent: index,
                focusOnOpen: true,
                templateUrl: 'administration/dashboard/templates/file-manager/file-manager.html',
                controller: 'FileManagerController'
            }).then(
            function success (images) {
                product.data.images.splice(product.data.images.length - 1,1);
                _.forEach(images,function(eachImage){
                    product.data.images.push(eachImage);
                });
            },errorCallback);
        };

        factory.init = function (newMode) {
            products = {
                loaded: false,
                fetching: true,
                data: {}
            };
            categories = {
                loaded: false,
                fetching: true,
                data: {}
            };
            product = {
                loaded: false,
                fetching: true,
                data: {}
            };
            image = {
                loaded: false,
                fetching: true,
                data: {}
            };
            query = {
                order: 'name',
                limit: 5,
                page: 1
            };
        };
        
        return factory;

    });

})();
